version: 0.2

env:
  variables:
    AWS_REGION: ap-south-1
    ECR_ACCOUNT: 448049808053
    REPO_NAME: dotnet-sample
    REGISTRY_URL: $ECR_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com
    REPO_URI: $REGISTRY_URL/$REPO_NAME
    IMAGE_TAG: $CODEBUILD_BUILD_NUMBER

phases:
  install:
    runtime-versions:
      dotnet: latest  # Use 'latest' to ensure 8.0.405+ or higher for multi-platform support
    commands:
      - apt-get update -y
      - apt-get install -y docker.io
      - curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version 8.0.405  # Install exact SDK 8.0.405
      - export PATH="$PATH:$HOME/.dotnet"  # Add to PATH for this session
      - dotnet --info  # Verify .NET SDK version early
      - docker run --privileged --rm tonistiigi/binfmt --install all
      - mkdir -p ~/.docker/cli-plugins
      - curl -fsSL https://github.com/docker/buildx/releases/download/v0.25.0/buildx-v0.25.0.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
      - chmod +x ~/.docker/cli-plugins/docker-buildx
      - export DOCKER_BUILDKIT=1

  pre_build:
    commands:
      - docker --version  # For debugging
      - dotnet --info     # Re-check SDK version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 448049808053.dkr.ecr.ap-south-1.amazonaws.com

  build:
    commands:
      - echo "Pankaj Shah"
      - echo "$REGISTRY_URL"
      - echo "$REPO_NAME"
      - echo "$IMAGE_TAG"
      - dotnet restore SampleApp.csproj
      - dotnet publish . -c Release
